{"ast":null,"code":"var _jsxFileName = \"/home/tahar/prog/react/deepend/src/components/dashbord.component.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DshbordComponenetStyle = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: auto;\n  left: 5vw;\n  width: 90vw;\n  margin-top: 150px;\n  .tags {\n    .tag {\n      color: #8a8888;\n      padding: 10px;\n      margin: 10px;\n      cursor: pointer;\n    }\n    .tag:first-child {\n      margin-left: 0;\n    }\n  }\n  .viewModel {\n    position: absolute;\n    opacity: 0;\n    height: 100px;\n    width: 200px;\n    font-size: 50px;\n    color: greenyellow;\n    cursor: pointer;\n  }\n`;\n_c = DshbordComponenetStyle;\n\nconst DashbordComponenet = () => {\n  _s();\n\n  let selected = 0;\n  let controllers = {\n    0: useAnimation(),\n    1: useAnimation(),\n    2: useAnimation(),\n    3: useAnimation(),\n    4: useAnimation(),\n    5: useAnimation()\n  };\n\n  const TestView = ({\n    tag,\n    controllers\n  }) => /*#__PURE__*/_jsxDEV(motion.span, {\n    className: \"viewModel \" + tag.replace(\" \", \"_\"),\n    animate: controllers,\n    children: tag.replace(\" \", \"_\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(DshbordComponenetStyle, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tags\",\n      children: [\"Dash board\", \"Posts\", \"Edit profile\", \"Subscription\", \"Billing address\", \"Submit post\"].map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(motion.span, {\n          whileHover: {\n            color: \"#f8f8f8\"\n          },\n          className: \"tag\",\n          onClick: async () => {\n            await controllers[selected].start({\n              opacity: 0\n            });\n            await controllers[i].start({\n              opacity: 1\n            });\n            selected = i;\n            console.log(e);\n          },\n          children: e\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(TestView, {\n        tag: \"Subscription\",\n        controllers: controllers[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TestView, {\n        tag: \"Posts\",\n        controllers: controllers[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TestView, {\n        tag: \"Edit profile\",\n        controllers: controllers[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(TestView, {\n        tag: \"Dash board\",\n        controllers: controllers[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashbordComponenet, \"besU2iNHTKzNxj9yVX5StI5QiSk=\", false, function () {\n  return [useAnimation, useAnimation, useAnimation, useAnimation, useAnimation, useAnimation];\n});\n\n_c2 = DashbordComponenet;\nexport default DashbordComponenet;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DshbordComponenetStyle\");\n$RefreshReg$(_c2, \"DashbordComponenet\");","map":{"version":3,"sources":["/home/tahar/prog/react/deepend/src/components/dashbord.component.js"],"names":["styled","motion","useAnimation","DshbordComponenetStyle","div","DashbordComponenet","selected","controllers","TestView","tag","replace","map","e","i","color","start","opacity","console","log"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,eAArC;;AAEA,MAAMC,sBAAsB,GAAGH,MAAM,CAACC,MAAM,CAACG,GAAR,CAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5BA;KAAMD,sB;;AA8BN,MAAME,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,MAAIC,QAAQ,GAAG,CAAf;AAEA,MAAIC,WAAW,GAAG;AAChB,OAAGL,YAAY,EADC;AAEhB,OAAGA,YAAY,EAFC;AAGhB,OAAGA,YAAY,EAHC;AAIhB,OAAGA,YAAY,EAJC;AAKhB,OAAGA,YAAY,EALC;AAMhB,OAAGA,YAAY;AANC,GAAlB;;AAQA,QAAMM,QAAQ,GAAG,CAAC;AAAEC,IAAAA,GAAF;AAAOF,IAAAA;AAAP,GAAD,kBACf,QAAC,MAAD,CAAQ,IAAR;AACE,IAAA,SAAS,EAAE,eAAeE,GAAG,CAACC,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAD5B;AAEE,IAAA,OAAO,EAAEH,WAFX;AAAA,cAIGE,GAAG,CAACC,OAAJ,CAAY,GAAZ,EAAiB,GAAjB;AAJH;AAAA;AAAA;AAAA;AAAA,UADF;;AASA,sBACE,QAAC,sBAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACG,CACC,YADD,EAEC,OAFD,EAGC,cAHD,EAIC,cAJD,EAKC,iBALD,EAMC,aAND,EAOCC,GAPD,CAOK,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,4BACE,QAAC,MAAD,CAAQ,IAAR;AACE,UAAA,UAAU,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WADd;AAEE,UAAA,SAAS,EAAC,KAFZ;AAGE,UAAA,OAAO,EAAE,YAAY;AACnB,kBAAMP,WAAW,CAACD,QAAD,CAAX,CAAsBS,KAAtB,CAA4B;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAA5B,CAAN;AACA,kBAAMT,WAAW,CAACM,CAAD,CAAX,CAAeE,KAAf,CAAqB;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAArB,CAAN;AACAV,YAAAA,QAAQ,GAAGO,CAAX;AACAI,YAAAA,OAAO,CAACC,GAAR,CAAYN,CAAZ;AACD,WARH;AAAA,oBAUGA;AAVH;AAAA;AAAA;AAAA;AAAA,gBADF;AAcD,OAtBA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,GAAG,EAAC,cAAd;AAA6B,QAAA,WAAW,EAAEL,WAAW,CAAC,CAAD;AAArD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,GAAG,EAAC,OAAd;AAAsB,QAAA,WAAW,EAAEA,WAAW,CAAC,CAAD;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAU,QAAA,GAAG,EAAC,cAAd;AAA6B,QAAA,WAAW,EAAEA,WAAW,CAAC,CAAD;AAArD;AAAA;AAAA;AAAA;AAAA,cAHF,EAG+D,GAH/D,eAIE,QAAC,QAAD;AAAU,QAAA,GAAG,EAAC,YAAd;AAA2B,QAAA,WAAW,EAAEA,WAAW,CAAC,CAAD;AAAnD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAvDD;;GAAMF,kB;UAICH,Y,EACAA,Y,EACAA,Y,EACAA,Y,EACAA,Y,EACAA,Y;;;MATDG,kB;AAyDN,eAAeA,kBAAf","sourcesContent":["import styled from \"styled-components\";\nimport { motion, useAnimation } from \"framer-motion\";\n\nconst DshbordComponenetStyle = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: auto;\n  left: 5vw;\n  width: 90vw;\n  margin-top: 150px;\n  .tags {\n    .tag {\n      color: #8a8888;\n      padding: 10px;\n      margin: 10px;\n      cursor: pointer;\n    }\n    .tag:first-child {\n      margin-left: 0;\n    }\n  }\n  .viewModel {\n    position: absolute;\n    opacity: 0;\n    height: 100px;\n    width: 200px;\n    font-size: 50px;\n    color: greenyellow;\n    cursor: pointer;\n  }\n`;\n\nconst DashbordComponenet = () => {\n  let selected = 0;\n\n  let controllers = {\n    0: useAnimation(),\n    1: useAnimation(),\n    2: useAnimation(),\n    3: useAnimation(),\n    4: useAnimation(),\n    5: useAnimation(),\n  };\n  const TestView = ({ tag, controllers }) => (\n    <motion.span\n      className={\"viewModel \" + tag.replace(\" \", \"_\")}\n      animate={controllers}\n    >\n      {tag.replace(\" \", \"_\")}\n    </motion.span>\n  );\n\n  return (\n    <DshbordComponenetStyle>\n      <div className=\"tags\">\n        {[\n          \"Dash board\",\n          \"Posts\",\n          \"Edit profile\",\n          \"Subscription\",\n          \"Billing address\",\n          \"Submit post\",\n        ].map((e, i) => {\n          return (\n            <motion.span\n              whileHover={{ color: \"#f8f8f8\" }}\n              className=\"tag\"\n              onClick={async () => {\n                await controllers[selected].start({ opacity: 0 });\n                await controllers[i].start({ opacity: 1 });\n                selected = i;\n                console.log(e);\n              }}\n            >\n              {e}\n            </motion.span>\n          );\n        })}\n      </div>\n      <div className=\"view\">\n        <TestView tag=\"Subscription\" controllers={controllers[3]} />\n        <TestView tag=\"Posts\" controllers={controllers[1]} />\n        <TestView tag=\"Edit profile\" controllers={controllers[2]} />{\" \"}\n        <TestView tag=\"Dash board\" controllers={controllers[0]} />\n      </div>\n    </DshbordComponenetStyle>\n  );\n};\n\nexport default DashbordComponenet;\n"]},"metadata":{},"sourceType":"module"}