{"ast":null,"code":"import _classCallCheck from\"/home/tahar/Documents/GitHub/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/tahar/Documents/GitHub/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/tahar/Documents/GitHub/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/tahar/Documents/GitHub/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{EventEmitter}from\"events\";var lightTheme={bg:\"#191919\",wColor:\"#f8f8ff\",dColor:\"#191919\",gColor:\"#8a8888\",sColor:\"#F2C14E\"};var darkTheme={bg:\"#ECECEC\",wColor:\"#191919\",dColor:\"#f8f8ff\",gColor:\"#4F4F4F\",sColor:\"#679267\"};var _theme=lightTheme;var event=/*#__PURE__*/function(_EventEmitter){_inherits(event,_EventEmitter);var _super=_createSuper(event);function event(){_classCallCheck(this,event);return _super.apply(this,arguments);}_createClass(event,[{key:\"isScrollingToBottom\",value:function isScrollingToBottom(cb){this.on(\"scrollToBottom\",cb);}},{key:\"isScrollToTop\",value:function isScrollToTop(cb){this.on(\"scrollToTop\",cb);}},{key:\"ditectScrollDirection\",value:function ditectScrollDirection(e){this.emit(e===\"TOP\"?\"scrollToBottom\":\"scrollToTop\");}},{key:\"isWidthChange\",value:function isWidthChange(){this.emit(\"widthChanged\",window.innerWidth);}},{key:\"onWidthChanges\",value:function onWidthChanges(cb){this.on(\"widthChanged\",cb);}},{key:\"chnageTheme\",value:function chnageTheme(){this.emit(\"changeTheme\");}},{key:\"themeIsChnaging\",value:function themeIsChnaging(cb){this.on(\"changeTheme\",cb);}},{key:\"theme\",value:function theme(){return _theme;}},{key:\"setTheme\",value:function setTheme(arg){if(!arg)_theme=_theme===lightTheme?darkTheme:lightTheme;else _theme=arg;}}]);return event;}(EventEmitter);var events=new event();export default events;","map":{"version":3,"sources":["/home/tahar/Documents/GitHub/blog/src/events.js"],"names":["EventEmitter","lightTheme","bg","wColor","dColor","gColor","sColor","darkTheme","theme","event","cb","on","e","emit","window","innerWidth","arg","events"],"mappings":"glBAAA,OAASA,YAAT,KAA6B,QAA7B,CAEA,GAAMC,CAAAA,UAAU,CAAG,CACjBC,EAAE,CAAE,SADa,CAEjBC,MAAM,CAAE,SAFS,CAGjBC,MAAM,CAAE,SAHS,CAIjBC,MAAM,CAAE,SAJS,CAKjBC,MAAM,CAAE,SALS,CAAnB,CAQA,GAAMC,CAAAA,SAAS,CAAG,CAChBL,EAAE,CAAE,SADY,CAEhBC,MAAM,CAAE,SAFQ,CAGhBC,MAAM,CAAE,SAHQ,CAIhBC,MAAM,CAAE,SAJQ,CAKhBC,MAAM,CAAE,SALQ,CAAlB,CAQA,GAAIE,CAAAA,MAAK,CAAGP,UAAZ,C,GAEMQ,CAAAA,K,2OACJ,6BAAoBC,EAApB,CAAwB,CACtB,KAAKC,EAAL,CAAQ,gBAAR,CAA0BD,EAA1B,EACD,C,6BACD,uBAAcA,EAAd,CAAkB,CAChB,KAAKC,EAAL,CAAQ,aAAR,CAAuBD,EAAvB,EACD,C,qCACD,+BAAsBE,CAAtB,CAAyB,CACvB,KAAKC,IAAL,CAAUD,CAAC,GAAK,KAAN,CAAc,gBAAd,CAAiC,aAA3C,EACD,C,6BACD,wBAAgB,CACd,KAAKC,IAAL,CAAU,cAAV,CAA0BC,MAAM,CAACC,UAAjC,EACD,C,8BACD,wBAAeL,EAAf,CAAmB,CACjB,KAAKC,EAAL,CAAQ,cAAR,CAAwBD,EAAxB,EACD,C,2BACD,sBAAc,CACZ,KAAKG,IAAL,CAAU,aAAV,EACD,C,+BACD,yBAAgBH,EAAhB,CAAoB,CAClB,KAAKC,EAAL,CAAQ,aAAR,CAAuBD,EAAvB,EACD,C,qBACD,gBAAQ,CACN,MAAOF,CAAAA,MAAP,CACD,C,wBACD,kBAASQ,GAAT,CAAc,CACZ,GAAI,CAACA,GAAL,CAAUR,MAAK,CAAGA,MAAK,GAAKP,UAAV,CAAuBM,SAAvB,CAAmCN,UAA3C,CAAV,IACKO,CAAAA,MAAK,CAAGQ,GAAR,CACN,C,mBA5BiBhB,Y,EA+BpB,GAAMiB,CAAAA,MAAM,CAAG,GAAIR,CAAAA,KAAJ,EAAf,CACA,cAAeQ,CAAAA,MAAf","sourcesContent":["import { EventEmitter } from \"events\";\n\nconst lightTheme = {\n  bg: \"#191919\",\n  wColor: \"#f8f8ff\",\n  dColor: \"#191919\",\n  gColor: \"#8a8888\",\n  sColor: \"#F2C14E\",\n};\n\nconst darkTheme = {\n  bg: \"#ECECEC\",\n  wColor: \"#191919\",\n  dColor: \"#f8f8ff\",\n  gColor: \"#4F4F4F\",\n  sColor: \"#679267\",\n};\n\nlet theme = lightTheme;\n\nclass event extends EventEmitter {\n  isScrollingToBottom(cb) {\n    this.on(\"scrollToBottom\", cb);\n  }\n  isScrollToTop(cb) {\n    this.on(\"scrollToTop\", cb);\n  }\n  ditectScrollDirection(e) {\n    this.emit(e === \"TOP\" ? \"scrollToBottom\" : \"scrollToTop\");\n  }\n  isWidthChange() {\n    this.emit(\"widthChanged\", window.innerWidth);\n  }\n  onWidthChanges(cb) {\n    this.on(\"widthChanged\", cb);\n  }\n  chnageTheme() {\n    this.emit(\"changeTheme\");\n  }\n  themeIsChnaging(cb) {\n    this.on(\"changeTheme\", cb);\n  }\n  theme() {\n    return theme;\n  }\n  setTheme(arg) {\n    if (!arg) theme = theme === lightTheme ? darkTheme : lightTheme;\n    else theme = arg;\n  }\n}\n\nconst events = new event();\nexport default events;\n"]},"metadata":{},"sourceType":"module"}