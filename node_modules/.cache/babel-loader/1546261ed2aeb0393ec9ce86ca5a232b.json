{"ast":null,"code":"var _jsxFileName = \"/home/tahar/prog/react/deepend/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport scroll from \"./events\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar keys = {\n  37: 1,\n  38: 1,\n  39: 1,\n  40: 1\n};\n\nfunction preventDefault(e) {\n  e.preventDefault();\n}\n\nfunction preventDefaultForScrollKeys(e) {\n  if (keys[e.keyCode]) {\n    preventDefault(e);\n    return false;\n  }\n} // modern Chrome requires { passive: false } when adding event\n\n\nvar supportsPassive = false;\n\ntry {\n  window.addEventListener(\"test\", null, Object.defineProperty({}, \"passive\", {\n    get: function () {\n      supportsPassive = true;\n    }\n  }));\n} catch (e) {}\n\nvar wheelOpt = supportsPassive ? {\n  passive: false\n} : false;\nvar wheelEvent = \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : \"mousewheel\"; // call this to Disable\n\nfunction disableScroll() {\n  window.addEventListener(\"DOMMouseScroll\", preventDefault, false); // older FF\n\n  window.addEventListener(wheelEvent, preventDefault, wheelOpt); // modern desktop\n\n  window.addEventListener(\"touchmove\", preventDefault, wheelOpt); // mobile\n\n  window.addEventListener(\"keydown\", preventDefaultForScrollKeys, false);\n} // call this to Enable\n\n\nfunction enableScroll() {\n  window.removeEventListener(\"DOMMouseScroll\", preventDefault, false);\n  window.removeEventListener(wheelEvent, preventDefault, wheelOpt);\n  window.removeEventListener(\"touchmove\", preventDefault, wheelOpt);\n  window.removeEventListener(\"keydown\", preventDefaultForScrollKeys, false);\n}\n\ndocument.addEventListener(\"wheel\", event => scroll.ditectScrollDirection(event));\nscroll.isScrollToTop(() => {\n  console.log(\"sscroll to top\");\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 17\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/home/tahar/prog/react/deepend/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","scroll","keys","preventDefault","e","preventDefaultForScrollKeys","keyCode","supportsPassive","window","addEventListener","Object","defineProperty","get","wheelOpt","passive","wheelEvent","document","createElement","disableScroll","enableScroll","removeEventListener","event","ditectScrollDirection","isScrollToTop","console","log","render","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AACA,IAAIC,IAAI,GAAG;AAAE,MAAI,CAAN;AAAS,MAAI,CAAb;AAAgB,MAAI,CAApB;AAAuB,MAAI;AAA3B,CAAX;;AAEA,SAASC,cAAT,CAAwBC,CAAxB,EAA2B;AACzBA,EAAAA,CAAC,CAACD,cAAF;AACD;;AAED,SAASE,2BAAT,CAAqCD,CAArC,EAAwC;AACtC,MAAIF,IAAI,CAACE,CAAC,CAACE,OAAH,CAAR,EAAqB;AACnBH,IAAAA,cAAc,CAACC,CAAD,CAAd;AACA,WAAO,KAAP;AACD;AACF,C,CAED;;;AACA,IAAIG,eAAe,GAAG,KAAtB;;AACA,IAAI;AACFC,EAAAA,MAAM,CAACC,gBAAP,CACE,MADF,EAEE,IAFF,EAGEC,MAAM,CAACC,cAAP,CAAsB,EAAtB,EAA0B,SAA1B,EAAqC;AACnCC,IAAAA,GAAG,EAAE,YAAY;AACfL,MAAAA,eAAe,GAAG,IAAlB;AACD;AAHkC,GAArC,CAHF;AASD,CAVD,CAUE,OAAOH,CAAP,EAAU,CAAE;;AAEd,IAAIS,QAAQ,GAAGN,eAAe,GAAG;AAAEO,EAAAA,OAAO,EAAE;AAAX,CAAH,GAAwB,KAAtD;AACA,IAAIC,UAAU,GACZ,aAAaC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAb,GAA6C,OAA7C,GAAuD,YADzD,C,CAGA;;AACA,SAASC,aAAT,GAAyB;AACvBV,EAAAA,MAAM,CAACC,gBAAP,CAAwB,gBAAxB,EAA0CN,cAA1C,EAA0D,KAA1D,EADuB,CAC2C;;AAClEK,EAAAA,MAAM,CAACC,gBAAP,CAAwBM,UAAxB,EAAoCZ,cAApC,EAAoDU,QAApD,EAFuB,CAEwC;;AAC/DL,EAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCN,cAArC,EAAqDU,QAArD,EAHuB,CAGyC;;AAChEL,EAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCJ,2BAAnC,EAAgE,KAAhE;AACD,C,CAED;;;AACA,SAASc,YAAT,GAAwB;AACtBX,EAAAA,MAAM,CAACY,mBAAP,CAA2B,gBAA3B,EAA6CjB,cAA7C,EAA6D,KAA7D;AACAK,EAAAA,MAAM,CAACY,mBAAP,CAA2BL,UAA3B,EAAuCZ,cAAvC,EAAuDU,QAAvD;AACAL,EAAAA,MAAM,CAACY,mBAAP,CAA2B,WAA3B,EAAwCjB,cAAxC,EAAwDU,QAAxD;AACAL,EAAAA,MAAM,CAACY,mBAAP,CAA2B,SAA3B,EAAsCf,2BAAtC,EAAmE,KAAnE;AACD;;AAEDW,QAAQ,CAACP,gBAAT,CAA0B,OAA1B,EAAoCY,KAAD,IACjCpB,MAAM,CAACqB,qBAAP,CAA6BD,KAA7B,CADF;AAIApB,MAAM,CAACsB,aAAP,CAAqB,MAAM;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,CAFD;AAIA3B,QAAQ,CAAC4B,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBV,QAAQ,CAACW,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACA3B,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport scroll from \"./events\";\nvar keys = { 37: 1, 38: 1, 39: 1, 40: 1 };\n\nfunction preventDefault(e) {\n  e.preventDefault();\n}\n\nfunction preventDefaultForScrollKeys(e) {\n  if (keys[e.keyCode]) {\n    preventDefault(e);\n    return false;\n  }\n}\n\n// modern Chrome requires { passive: false } when adding event\nvar supportsPassive = false;\ntry {\n  window.addEventListener(\n    \"test\",\n    null,\n    Object.defineProperty({}, \"passive\", {\n      get: function () {\n        supportsPassive = true;\n      },\n    })\n  );\n} catch (e) {}\n\nvar wheelOpt = supportsPassive ? { passive: false } : false;\nvar wheelEvent =\n  \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : \"mousewheel\";\n\n// call this to Disable\nfunction disableScroll() {\n  window.addEventListener(\"DOMMouseScroll\", preventDefault, false); // older FF\n  window.addEventListener(wheelEvent, preventDefault, wheelOpt); // modern desktop\n  window.addEventListener(\"touchmove\", preventDefault, wheelOpt); // mobile\n  window.addEventListener(\"keydown\", preventDefaultForScrollKeys, false);\n}\n\n// call this to Enable\nfunction enableScroll() {\n  window.removeEventListener(\"DOMMouseScroll\", preventDefault, false);\n  window.removeEventListener(wheelEvent, preventDefault, wheelOpt);\n  window.removeEventListener(\"touchmove\", preventDefault, wheelOpt);\n  window.removeEventListener(\"keydown\", preventDefaultForScrollKeys, false);\n}\n\ndocument.addEventListener(\"wheel\", (event) =>\n  scroll.ditectScrollDirection(event)\n);\n\nscroll.isScrollToTop(() => {\n  console.log(\"sscroll to top\");\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}