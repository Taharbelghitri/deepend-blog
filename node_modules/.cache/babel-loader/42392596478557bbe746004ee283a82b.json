{"ast":null,"code":"var _jsxFileName = \"/home/tahar/prog/react/deepend/src/components/dashbord.component.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DshbordComponenetStyle = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: auto;\n  left: 5vw;\n  width: 90vw;\n  margin-top: 150px;\n  .tags {\n    .tag {\n      color: #8a8888;\n      padding: 10px;\n      margin: 10px;\n    }\n    .tag:first-child {\n      margin-left: 0;\n    }\n  }\n  .viewModel {\n    opacity: 0;\n    height: 100px;\n    width: 200px;\n  }\n`;\n_c = DshbordComponenetStyle;\n\nconst TestView = ({\n  tag,\n  controller\n}) => /*#__PURE__*/_jsxDEV(motion.span, {\n  className: \"viewModel \" + tag.replace(\" \", \"_\"),\n  animate: controller,\n  children: tag.replace(\" \", \"_\")\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this);\n\n_c2 = TestView;\n\nconst DashbordComponenet = () => {\n  _s();\n\n  let selected = 0;\n  let controllers = {\n    0: useAnimation(),\n    1: useAnimation(),\n    2: useAnimation(),\n    3: useAnimation(),\n    4: useAnimation(),\n    5: useAnimation()\n  };\n  return /*#__PURE__*/_jsxDEV(DshbordComponenetStyle, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tags\",\n      children: [\"Dash board\", \"Posts\", \"Edit profile\", \"Subscription\", \"Billing address\", \"Submit post\"].map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(motion.span, {\n          whileHover: {\n            color: \"#f8f8f8\"\n          },\n          className: \"tag\",\n          onClick: async () => {\n            console.log(e);\n            await controllers[selected].start({\n              opacity: 0\n            });\n            controllers[i].start({\n              opacity: 1\n            });\n          },\n          children: e\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(TestView, {\n        tag: \"Subscription\",\n        controllers: controllers[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TestView, {\n        tag: \"Posts\",\n        controllers: controllers[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TestView, {\n        tag: \"Edit profile\",\n        controllers: controllers[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(TestView, {\n        tag: \"Dash board\",\n        controllers: controllers[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashbordComponenet, \"besU2iNHTKzNxj9yVX5StI5QiSk=\", false, function () {\n  return [useAnimation, useAnimation, useAnimation, useAnimation, useAnimation, useAnimation];\n});\n\n_c3 = DashbordComponenet;\nexport default DashbordComponenet;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DshbordComponenetStyle\");\n$RefreshReg$(_c2, \"TestView\");\n$RefreshReg$(_c3, \"DashbordComponenet\");","map":{"version":3,"sources":["/home/tahar/prog/react/deepend/src/components/dashbord.component.js"],"names":["styled","motion","useAnimation","DshbordComponenetStyle","div","TestView","tag","controller","replace","DashbordComponenet","selected","controllers","map","e","i","color","console","log","start","opacity"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport { motion, useAnimation } from \"framer-motion\";\n\nconst DshbordComponenetStyle = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: auto;\n  left: 5vw;\n  width: 90vw;\n  margin-top: 150px;\n  .tags {\n    .tag {\n      color: #8a8888;\n      padding: 10px;\n      margin: 10px;\n    }\n    .tag:first-child {\n      margin-left: 0;\n    }\n  }\n  .viewModel {\n    opacity: 0;\n    height: 100px;\n    width: 200px;\n  }\n`;\n\nconst TestView = ({ tag, controller }) => (\n  <motion.span\n    className={\"viewModel \" + tag.replace(\" \", \"_\")}\n    animate={controller}\n  >\n    {tag.replace(\" \", \"_\")}\n  </motion.span>\n);\n\nconst DashbordComponenet = () => {\n  let selected = 0;\n\n  let controllers = {\n    0: useAnimation(),\n    1: useAnimation(),\n    2: useAnimation(),\n    3: useAnimation(),\n    4: useAnimation(),\n    5: useAnimation(),\n  };\n\n  return (\n    <DshbordComponenetStyle>\n      <div className=\"tags\">\n        {[\n          \"Dash board\",\n          \"Posts\",\n          \"Edit profile\",\n          \"Subscription\",\n          \"Billing address\",\n          \"Submit post\",\n        ].map((e, i) => {\n          return (\n            <motion.span\n              whileHover={{ color: \"#f8f8f8\" }}\n              className=\"tag\"\n              onClick={async () => {\n                console.log(e);\n                await controllers[selected].start({ opacity: 0 });\n                controllers[i].start({ opacity: 1 });\n              }}\n            >\n              {e}\n            </motion.span>\n          );\n        })}\n      </div>\n      <div className=\"view\">\n        <TestView tag=\"Subscription\" controllers={controllers[3]} />\n        <TestView tag=\"Posts\" controllers={controllers[1]} />\n        <TestView tag=\"Edit profile\" controllers={controllers[2]} />{\" \"}\n        <TestView tag=\"Dash board\" controllers={controllers[0]} />\n      </div>\n    </DshbordComponenetStyle>\n  );\n};\n\nexport default DashbordComponenet;\n"]},"metadata":{},"sourceType":"module"}