{"ast":null,"code":"import { EventEmitter } from \"events\";\nconst lightTheme = {\n  bg: \"#191919\",\n  wColor: \"#f8f8ff\",\n  dColor: \"#191919\",\n  gColor: \"#8a8888\",\n  sColor: \"#F2C14E\"\n};\nconst darkTheme = {\n  bg: \"#ECECEC\",\n  wColor: \"#191919\",\n  dColor: \"#f8f8ff\",\n  gColor: \"#4F4F4F\",\n  sColor: \"#F2C14E\"\n};\nlet theme = lightTheme;\n\nclass event extends EventEmitter {\n  isScrollingToBottom(cb) {\n    this.on(\"scrollToBottom\", cb);\n  }\n\n  isScrollToTop(cb) {\n    this.on(\"scrollToTop\", cb);\n  }\n\n  ditectScrollDirection(e) {\n    this.emit(e === \"TOP\" ? \"scrollToBottom\" : \"scrollToTop\");\n  }\n\n  isWidthChange() {\n    this.emit(\"widthChanged\", window.innerWidth);\n  }\n\n  onWidthChanges(cb) {\n    this.on(\"widthChanged\", cb);\n  }\n\n  chnageTheme() {\n    this.emit(\"changeTheme\");\n  }\n\n  themeIsChnaging(cb) {\n    this.on(\"changeTheme\", cb);\n  }\n\n  theme() {\n    return theme;\n  }\n\n  setTheme(arg) {\n    if (!arg) theme = theme === lightTheme ? darkTheme : lightTheme;else theme = arg;\n  }\n\n}\n\nconst events = new event();\nexport default events;","map":{"version":3,"sources":["/home/tahar/prog/react/deepend/src/events.js"],"names":["EventEmitter","lightTheme","bg","wColor","dColor","gColor","sColor","darkTheme","theme","event","isScrollingToBottom","cb","on","isScrollToTop","ditectScrollDirection","e","emit","isWidthChange","window","innerWidth","onWidthChanges","chnageTheme","themeIsChnaging","setTheme","arg","events"],"mappings":"AAAA,SAASA,YAAT,QAA6B,QAA7B;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,EAAE,EAAE,SADa;AAEjBC,EAAAA,MAAM,EAAE,SAFS;AAGjBC,EAAAA,MAAM,EAAE,SAHS;AAIjBC,EAAAA,MAAM,EAAE,SAJS;AAKjBC,EAAAA,MAAM,EAAE;AALS,CAAnB;AAQA,MAAMC,SAAS,GAAG;AAChBL,EAAAA,EAAE,EAAE,SADY;AAEhBC,EAAAA,MAAM,EAAE,SAFQ;AAGhBC,EAAAA,MAAM,EAAE,SAHQ;AAIhBC,EAAAA,MAAM,EAAE,SAJQ;AAKhBC,EAAAA,MAAM,EAAE;AALQ,CAAlB;AAQA,IAAIE,KAAK,GAAGP,UAAZ;;AAEA,MAAMQ,KAAN,SAAoBT,YAApB,CAAiC;AAC/BU,EAAAA,mBAAmB,CAACC,EAAD,EAAK;AACtB,SAAKC,EAAL,CAAQ,gBAAR,EAA0BD,EAA1B;AACD;;AACDE,EAAAA,aAAa,CAACF,EAAD,EAAK;AAChB,SAAKC,EAAL,CAAQ,aAAR,EAAuBD,EAAvB;AACD;;AACDG,EAAAA,qBAAqB,CAACC,CAAD,EAAI;AACvB,SAAKC,IAAL,CAAUD,CAAC,KAAK,KAAN,GAAc,gBAAd,GAAiC,aAA3C;AACD;;AACDE,EAAAA,aAAa,GAAG;AACd,SAAKD,IAAL,CAAU,cAAV,EAA0BE,MAAM,CAACC,UAAjC;AACD;;AACDC,EAAAA,cAAc,CAACT,EAAD,EAAK;AACjB,SAAKC,EAAL,CAAQ,cAAR,EAAwBD,EAAxB;AACD;;AACDU,EAAAA,WAAW,GAAG;AACZ,SAAKL,IAAL,CAAU,aAAV;AACD;;AACDM,EAAAA,eAAe,CAACX,EAAD,EAAK;AAClB,SAAKC,EAAL,CAAQ,aAAR,EAAuBD,EAAvB;AACD;;AACDH,EAAAA,KAAK,GAAG;AACN,WAAOA,KAAP;AACD;;AACDe,EAAAA,QAAQ,CAACC,GAAD,EAAM;AACZ,QAAI,CAACA,GAAL,EAAUhB,KAAK,GAAGA,KAAK,KAAKP,UAAV,GAAuBM,SAAvB,GAAmCN,UAA3C,CAAV,KACKO,KAAK,GAAGgB,GAAR;AACN;;AA5B8B;;AA+BjC,MAAMC,MAAM,GAAG,IAAIhB,KAAJ,EAAf;AACA,eAAegB,MAAf","sourcesContent":["import { EventEmitter } from \"events\";\n\nconst lightTheme = {\n  bg: \"#191919\",\n  wColor: \"#f8f8ff\",\n  dColor: \"#191919\",\n  gColor: \"#8a8888\",\n  sColor: \"#F2C14E\",\n};\n\nconst darkTheme = {\n  bg: \"#ECECEC\",\n  wColor: \"#191919\",\n  dColor: \"#f8f8ff\",\n  gColor: \"#4F4F4F\",\n  sColor: \"#F2C14E\",\n};\n\nlet theme = lightTheme;\n\nclass event extends EventEmitter {\n  isScrollingToBottom(cb) {\n    this.on(\"scrollToBottom\", cb);\n  }\n  isScrollToTop(cb) {\n    this.on(\"scrollToTop\", cb);\n  }\n  ditectScrollDirection(e) {\n    this.emit(e === \"TOP\" ? \"scrollToBottom\" : \"scrollToTop\");\n  }\n  isWidthChange() {\n    this.emit(\"widthChanged\", window.innerWidth);\n  }\n  onWidthChanges(cb) {\n    this.on(\"widthChanged\", cb);\n  }\n  chnageTheme() {\n    this.emit(\"changeTheme\");\n  }\n  themeIsChnaging(cb) {\n    this.on(\"changeTheme\", cb);\n  }\n  theme() {\n    return theme;\n  }\n  setTheme(arg) {\n    if (!arg) theme = theme === lightTheme ? darkTheme : lightTheme;\n    else theme = arg;\n  }\n}\n\nconst events = new event();\nexport default events;\n"]},"metadata":{},"sourceType":"module"}